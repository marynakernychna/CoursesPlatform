{"version":3,"sources":["components/auth/login/styles.module.css","components/auth/registration/styles.module.css","components/auth/login/types.js","components/auth/service.js","components/auth/types.js","components/auth/roles.js","components/auth/actions.js","components/auth/login/login.js","components/auth/login/actions.js","components/auth/login/index.js","components/auth/registration/types.js","components/auth/registration/registration.js","components/auth/registration/actions.js","components/auth/registration/index.js","components/studentPanel/sideMenu/sectionNames.js","components/studentPanel/sideMenu/studentSideMenu.js","components/studentPanel/types.js","components/studentPanel/sideMenu/index.js","components/studentPanel/sideMenu/actions.js","components/studentPanel/components/courses/courses.js","components/studentPanel/service.js","components/studentPanel/components/courses/index.js","components/studentPanel/components/courses/actions.js","components/studentPanel/components/myCourses/myCourses.js","components/studentPanel/components/myCourses/index.js","components/studentPanel/components/myCourses/actions.js","components/studentPanel/components/profile/profile.js","components/studentPanel/components/profile/index.js","components/studentPanel/components/profile/actions.js","components/studentPanel/studentPanel.js","components/studentPanel/index.js","components/adminPanel/sectionNames.js","components/adminPanel/sideMenu/adminSideMenu.js","components/adminPanel/sideMenu/types.js","components/adminPanel/sideMenu/index.js","components/adminPanel/sideMenu/actions.js","components/adminPanel/components/courses/courses.js","components/adminPanel/types.js","components/adminPanel/components/courses/index.js","components/adminPanel/components/courses/actions.js","components/adminPanel/components/addCourse/addCourse.js","components/adminPanel/components/addCourse/index.js","components/adminPanel/components/addCourse/actions.js","components/adminPanel/components/students/students.js","components/adminPanel/components/students/index.js","components/adminPanel/components/students/actions.js","components/adminPanel/adminPanel.js","components/adminPanel/index.js","PrivateRoute.js","App.js","enhancers/monitorReducers.js","midleware/logger.js","components/auth/reducer.js","components/studentPanel/reducer.js","components/adminPanel/reducer.js","rootReducer.js","index.js","configureStore.js"],"names":["module","exports","LOGINSTARTED","LOGINSUCCESS","LOGINFAILED","LOGINVIAFACEBOOKSTARTED","LOGINVIAFACEBOOKSUCCESS","LOGINVIAFACEBOOKFAILED","URL","axios","interceptors","request","use","config","token","window","localStorage","getItem","headers","Authorization","error","Promise","reject","authService","requestData","post","get","model","SETCURRENTUSER","LOGOUT","roles","setJWTToken","dispatch","responseData","userData","jwt","decode","jwtToken","type","types","setItem","role","redirect","history","userRole","service","then","response","console","log","err","catch","push","Login","props","useDispatch","useEffect","document","title","className","styles","loginBlock","style","marginBottom","color","name","initialValues","remember","onFinish","userdata","logIn","data","onFinishFailed","errorInfo","Item","rules","required","message","prefix","UserOutlined","placeholder","Password","LockOutlined","htmlType","width","appId","autoLoad","fields","callback","first_name","last_name","email","cssClass","buttonStyle","loginBottomText","href","fontStyle","fontWeight","withRouter","LoginPage","REGISTRATIONSTARTED","REGISTRATIONSUCCESS","REGISTRATIONFAILED","Registration","Form","useForm","form","registrationBlock","registerUser","register","scrollToFirstError","min","max","hasFeedback","dependencies","getFieldValue","validator","_","value","Error","resolve","registrationBottomText","RegistrationPage","COURSES","MYCOURSES","PROFILE","StudentSideMenu","state","changeSectionName","changeSection","defaultSelectedKeys","defaultOpenKeys","mode","theme","icon","DesktopOutlined","onClick","sectionNames","AppstoreOutlined","SettingOutlined","ExportOutlined","logOut","React","Component","GETCOURSESSTARTED","GETCOURSESSUCCESS","GETCOURSESFAILED","GETMYCOURSESSTARTED","GETMYCOURSESSUCCESS","GETMYCOURSESFAILED","CHANGESECTION","ENROLLINACOURSESTARTED","ENROLLINACOURSESSUCCESS","ENROLLINACOURSEFAILED","REMOVESUBSCRIBESTARTED","REMOVESUBSCRIBESUCCESS","REMOVESUBSCRIBEFAILED","GETPROFILEINFOSTARTED","GETPROFILEINFOSUCCESS","GETPROFILEINFOFAILED","connect","stateRedux","removeItem","sectionName","Content","Layout","Meta","Card","Courses","handleCancel","setState","isModal","courseForEnroll","courseData","newCourse","course","startDate","moment","_d","format","enrollInACourse","disabledDate","current","now","subtract","add","courses","reduxCourses","this","getCourses","dateFormat","padding","minHeight","gutter","map","index","span","hoverable","cover","src","imageUrl","alt","description","createDate","FormOutlined","marginTop","visible","onCancel","okButtonProps","display","labelCol","wrapperCol","label","defaultValue","offset","getDerivedStateFromProps","nextProps","prevState","coursesService","studentPanelReducer","JwtToken","getCoursesList","requestModel","StartDate","Course","MyCourses","reduxMyCourses","isMyCoursesLoadedFromBase","getMyCourses","removeSubscribe","length","date","CloseOutlined","danger","removeMyCourse","Profile","profile","reduxProfile","isProfileLoadedFromBase","getProfileInfo","colspan","fontSize","surname","rowspan","height","disabled","age","reduxProfileInfo","profileInfo","Sider","StudentPanel","reduxSectionName","showSectionContent","COURSES_VER","COURSES_Add","STUDENTS_VER","STUDENTS_Add","SubMenu","Menu","AdminSideMenu","DatabaseFilled","ContactsFilled","courseForEdit","values","id","editCourse","removeCourse","editACourse","removeACourse","EDITCOURSESTARTED","EDITCOURSESUCCESS","EDITCOURSEFAILED","REMOVECOURSESTARTED","REMOVECOURSESUCCESS","REMOVECOURSEFAILED","ADDCOURSESTARTED","ADDCOURSESUCCESS","ADDCOURSEFAILED","GETSTUDENTSSTARTED","GETSTUDENTSSUCCESS","GETSTUDENTSFAILED","adminPanelReducer","CourseId","CourseTitle","CourseDescription","CourseImageUrl","AddCourse","addCourse","showMessage","Students","studentForEdit","newStudent","password","isAdmin","students","reduxStudents","getStudents","studentsForEdit","student","editStudent","removeStudent","AdminPanel","newTitle","isAuthUser","authReducer","allowedRoles","includes","component","children","to","App","path","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","action","number","start","performance","newState","end","diff","Math","round","logger","store","next","group","info","result","getState","groupEnd","intialState","loginTypes","registrationTypes","indexOf","splice","isCoursesLoadedFromBase","combineReducers","preloadedState","middlewares","loggerMiddleware","thunkMiddleware","enhancers","applyMiddleware","monitorReducersEnhancer","composedEnhancers","composeWithDevTools","rootReducer","configureStore","rootElement","getElementById","render"],"mappings":"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","file":"static/js/main.c5fab6f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBlock\":\"styles_loginBlock__21fUo\",\"loginBottomText\":\"styles_loginBottomText__3U-xM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registrationBlock\":\"styles_registrationBlock__1a7A9\",\"registrationBottomText\":\"styles_registrationBottomText__34t-E\"};","export const LOGINSTARTED = \"login/LOGINSTARTED\";\r\nexport const LOGINSUCCESS = \"login/LOGINSUCCESS\";\r\nexport const LOGINFAILED = \"login/LOGINFAILED\";\r\n\r\nexport const LOGINVIAFACEBOOKSTARTED = \"login/LOGINVIAFACEBOOKSTARTED\";\r\nexport const LOGINVIAFACEBOOKSUCCESS = \"login/LOGINVIAFACEBOOKSUCCESS\";\r\nexport const LOGINVIAFACEBOOKFAILED = \"login/LOGINVIAFACEBOOKFAILED\";","import axios from \"axios\";\r\n\r\nconst URL = \"http://localhost:5000/Auth/\";\r\n\r\naxios.interceptors.request.use((config) => {\r\n    const token = window.localStorage.getItem('authToken');\r\n    if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n}, error => {\r\n    return Promise.reject(error);\r\n})\r\n\r\nexport default class authService {\r\n    static logIn(requestData) {\r\n        return axios.post(URL + 'LogIn', requestData);\r\n    }\r\n\r\n    static get() {\r\n        return axios.get(\"http://localhost:5000/Courses/\" + 'GetCourses');\r\n    }\r\n\r\n    static logInViaFacebook(requestData) {\r\n        return axios.post(URL + 'LogInViaFacebook', requestData);\r\n    }\r\n\r\n    static registerUser(model) {\r\n        return axios.post(URL + 'RegisterUser', model);\r\n    }\r\n}","export const SETCURRENTUSER = \"auth/SETAUTHTOKEN\";\r\nexport const LOGOUT = \"auth/LOGOUT\";","export const roles = {\r\n    'STUDENT': 'Student',\r\n    'ADMIN': 'Admin',\r\n    'GUEST': 'Guest'\r\n}","import * as types from './types';\r\nimport jwt from 'jsonwebtoken';\r\nimport { roles } from './roles';\r\nimport service from './service';\r\n\r\nexport function setJWTToken(dispatch, responseData) {\r\n    var userData = jwt.decode(responseData.jwtToken);\r\n    dispatch({ type: types.SETCURRENTUSER });\r\n    localStorage.setItem('authToken', responseData.jwtToken);\r\n    return userData.role;\r\n}\r\n\r\nexport function redirect(history, userRole) {\r\n    service.get()\r\n            .then((response) => {\r\n                console.log(response);\r\n            },\r\n                err => {\r\n                    console.log(\"Error: \", err.response);\r\n                })\r\n            .catch(err => {\r\n                console.log(\"Global server error\", err);\r\n            });\r\n\r\n    switch (userRole) {\r\n        case roles.STUDENT:\r\n            history.push(\"/studentPanel\");\r\n            break;\r\n        case roles.ADMIN:\r\n            history.push(\"/adminPanel\");\r\n            break;\r\n    }\r\n}","import styles from '../login/styles.module.css'\r\nimport React, { Fragment, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Input, Button, Form } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport { signIn, loginViaFacebook } from './actions';\r\n\r\nconst Login = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        document.title = 'Log in';\r\n    });\r\n\r\n    const onFinish = (userData) => {\r\n        console.log('Success : ', userData);\r\n        dispatch(signIn(userData, props.history));\r\n    }\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    }\r\n\r\n    const responseFacebook = (response) => {\r\n        var userData = {\r\n            name: response.first_name,\r\n            surname: response.last_name,\r\n            email: response.email\r\n        }\r\n        console.log(response);\r\n        // dispatch(loginViaFacebook(userData, props.history));\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={styles.loginBlock}>\r\n\r\n                <h3 style={{ marginBottom: '35px', color: 'white' }}>Log in</h3>\r\n\r\n                <Form\r\n                    name=\"basic\"\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                >\r\n                    <Form.Item\r\n                        name=\"email\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Input your email!',\r\n                                type: 'email'\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input\r\n                            prefix={<UserOutlined />}\r\n                            className=\"site-form-item-icon\"\r\n                            placeholder=\"email\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Input your password!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input.Password\r\n                            placeholder=\"password\"\r\n                            prefix={<LockOutlined />}\r\n                            className=\"site-form-item-icon\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        <Button type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            style={{ width: '100%' }}\r\n                        >\r\n                            Log in\r\n                        </Button>\r\n                        <br />\r\n                    </Form.Item>\r\n                </Form>\r\n\r\n                <FacebookLogin\r\n                    appId=\"651731139077984\"\r\n                    autoLoad={false}\r\n                    fields=\"first_name, last_name, picture, email\"\r\n                    callback={responseFacebook}\r\n                    cssClass=\"ant-btn ant-btn-primary login-form-button\"\r\n                    buttonStyle={{ width: '100%' }}\r\n                />\r\n\r\n                <div className={styles.loginBottomText}>\r\n                    Or <a href=\"/registration\"\r\n                        style={{ fontStyle: 'italic', fontWeight: '500' }}>\r\n                            register now!</a>\r\n                </div>\r\n\r\n            </div>\r\n        </Fragment >\r\n    );\r\n}\r\n\r\nexport default Login;","import * as types from './types';\r\nimport service from '../service';\r\nimport { setJWTToken, redirect } from '../actions';\r\n\r\nexport function signIn(userdata, history) {\r\n    return (dispatch) => {\r\n\r\n        dispatch({ type: types.LOGINSTARTED });\r\n\r\n        service.logIn(userdata)\r\n            .then((response) => {\r\n                var userRole = setJWTToken(dispatch, response.data);\r\n                dispatch({ type: types.LOGINSUCCESS, role: userRole });\r\n                redirect(history, userRole);\r\n            },\r\n                err => {\r\n                    console.log(\"Error: \", err.response);\r\n                    dispatch({ type: types.LOGINFAILED })\r\n                })\r\n            .catch(err => {\r\n                console.log(\"Global server error\", err);\r\n            });\r\n    }\r\n}\r\n\r\nexport function loginViaFacebook(userData, history) {\r\n    return (dispatch) => {\r\n\r\n        dispatch({ type: types.LOGINVIAFACEBOOKSTARTED });\r\n\r\n        service.logInViaFacebook(userData)\r\n            .then((response) => {\r\n                var userRole = setJWTToken(dispatch, response.data);\r\n                dispatch({ type: types.LOGINVIAFACEBOOKSUCCESS, role: userRole });\r\n                redirect(history, userRole);\r\n            },\r\n                err => {\r\n                    console.log(\"Error: \", err.response);\r\n                    dispatch({\r\n                        type: types.LOGINVIAFACEBOOKFAILED\r\n                    })\r\n                })\r\n            .catch(err => {\r\n                console.log(\"Global server error\", err);\r\n            });\r\n    }\r\n}\r\n","import LoginPage from './login';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nexport default withRouter(LoginPage);","export const REGISTRATIONSTARTED = \"registration/REGISTRATIONSTARTED\";\r\nexport const REGISTRATIONSUCCESS = \"registration/REGISTRATIONSUCCESS\";\r\nexport const REGISTRATIONFAILED = \"registration/REGISTRATIONFAILED\";","import { useDispatch } from 'react-redux';\r\nimport styles from '../registration/styles.module.css';\r\nimport { Form, Input, Button, InputNumber } from 'antd';\r\nimport { Fragment, useEffect } from \"react\";\r\nimport { register } from './actions';\r\n\r\nconst Registration = (props) => {\r\n\r\n    const [form] = Form.useForm();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        document.title = 'Registration';\r\n    });\r\n\r\n    const onFinish = (userData) => {\r\n        console.log('Success : ', userData);\r\n        dispatch(register(userData, props.history));\r\n    }\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={styles.registrationBlock}>\r\n\r\n                <h3 style={{ marginBottom: '35px', color: 'white' }}>Registration</h3>\r\n\r\n                <Form\r\n                    form={form}\r\n                    name=\"register\"\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                    scrollToFirstError\r\n                >\r\n                    <Form.Item\r\n                        name=\"email\"\r\n                        rules={[\r\n                            {\r\n                                type: 'email',\r\n                                message: 'The input is not valid E-mail!',\r\n                            },\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your E-mail!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input placeholder=\"Email\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"name\"\r\n                        rules={[\r\n                            {\r\n                                type: 'string',\r\n                                message: 'The input is not valid Name!',\r\n                            },\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your Name!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input placeholder=\"Name\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"surname\"\r\n                        rules={[\r\n                            {\r\n                                type: 'string',\r\n                                message: 'The input is not valid Surname!',\r\n                            },\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your Surname!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input placeholder=\"Surname\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"age\"\r\n                        rules={[\r\n                            {\r\n                                type: 'number',\r\n                                message: 'The input is not valid Age!',\r\n                            },\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your Age!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <InputNumber\r\n                            min={14}\r\n                            max={100}\r\n                            placeholder=\"Age\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your password!',\r\n                            },\r\n                        ]}\r\n                        hasFeedback\r\n                    >\r\n                        <Input.Password placeholder=\"Password\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"confirm\"\r\n                        dependencies={['password']}\r\n                        hasFeedback\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please confirm your password!',\r\n                            },\r\n                            ({ getFieldValue }) => ({\r\n                                validator(_, value) {\r\n                                    if (!value || getFieldValue('password') === value) {\r\n                                        return Promise.resolve();\r\n                                    }\r\n\r\n                                    return Promise.reject(\r\n                                        new Error\r\n                                            (\r\n                                                'The two passwords that you entered do not match!'\r\n                                            )\r\n                                    );\r\n                                },\r\n                            }),\r\n                        ]}\r\n                    >\r\n                        <Input.Password placeholder=\"Confirm password\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        <Button type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            className=\"registerBtn\"\r\n                            style={{ width: '100%' }}>\r\n                            Register\r\n                        </Button>\r\n\r\n                    </Form.Item>\r\n                </Form>\r\n\r\n                <div className={styles.registrationBottomText}>\r\n                    Or <a href=\"/login\"\r\n                        style={{ fontStyle: 'italic', fontWeight: '500' }}>\r\n                        login now!</a>\r\n                </div>\r\n\r\n            </div>\r\n        </Fragment>\r\n    );\r\n\r\n}\r\n\r\nexport default Registration;","import * as types from './types';\r\nimport service from '../service';\r\nimport { redirect, setJWTToken } from '../actions';\r\n\r\nexport function register(userData, history) {\r\n    return (dispatch) => {\r\n\r\n        dispatch({ type: types.REGISTRATIONSTARTED });\r\n\r\n        service.registerUser(userData)\r\n            .then((response) => {\r\n                var userRole = setJWTToken(dispatch, response.data);\r\n                dispatch({ type: types.REGISTRATIONSUCCESS, role: userRole });\r\n                redirect(history, userRole);\r\n            },\r\n                err => {\r\n                    console.log(\"Error: \", err.response);\r\n                    dispatch({\r\n                        type: types.REGISTRATIONFAILED\r\n                    })\r\n                })\r\n            .catch(err => {\r\n                console.log(\"Global server error\", err);\r\n            });\r\n    }\r\n}","import RegistrationPage from './registration';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nexport default withRouter(RegistrationPage);","export const COURSES = \"Courses\";\r\nexport const MYCOURSES = \"MyCourses\";\r\nexport const PROFILE = \"Profile\";\r\n","import React, { Fragment } from 'react';\r\nimport { Menu } from 'antd';\r\nimport {\r\n    DesktopOutlined,\r\n    SettingOutlined,\r\n    AppstoreOutlined,\r\n    ExportOutlined\r\n} from '@ant-design/icons';\r\nimport * as sectionNames from './sectionNames'\r\n\r\nclass StudentSideMenu extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const logOut = () => {\r\n            this.props.logOut();\r\n        }\r\n        const changeSectionName = (name) => {\r\n            console.log(name);\r\n            this.props.changeSection(name);\r\n        }\r\n\r\n        return (\r\n            <Fragment className=\"block\" >\r\n                <Menu\r\n                    defaultSelectedKeys={['1']}\r\n                    defaultOpenKeys={['sub1']}\r\n                    mode=\"inline\"\r\n                    theme=\"dark\"\r\n                >\r\n                    <Menu.Item key=\"1\" icon={<DesktopOutlined />} onClick={() => changeSectionName(sectionNames.COURSES)}>\r\n                        Courses\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"2\" icon={<AppstoreOutlined />} onClick={() => changeSectionName(sectionNames.MYCOURSES)}>\r\n                        My courses\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"3\" icon={<SettingOutlined />} onClick={() => changeSectionName(sectionNames.PROFILE)}>\r\n                        Profile\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"4\" icon={<ExportOutlined />} onClick={logOut}>\r\n                        Log out\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentSideMenu;","export const GETCOURSESSTARTED = \"studentPanel/GETCOURSESSTARTED\";\r\nexport const GETCOURSESSUCCESS = \"studentPanel/GETCOURSESSUCCESS\";\r\nexport const GETCOURSESFAILED = \"studentPanel/GETCOURSESFAILED\";\r\n\r\nexport const GETMYCOURSESSTARTED = \"studentPanel/GETMYCOURSESSTARTED\";\r\nexport const GETMYCOURSESSUCCESS = \"studentPanel/GETMYCOURSESSUCCESS\";\r\nexport const GETMYCOURSESFAILED = \"studentPanel/GETCMYOURSESFAILED\";\r\n\r\nexport const CHANGESECTION = \"studentPanel/CHANGESECTION\";\r\n\r\nexport const ENROLLINACOURSESTARTED = \"studentPanel/ENROLLINACOURSESTARTED\";\r\nexport const ENROLLINACOURSESSUCCESS = \"studentPanel/ENROLLINACOURSESSUCCESS\";\r\nexport const ENROLLINACOURSEFAILED = \"studentPanel/ENROLLINACOURSEFAILED\";\r\n\r\nexport const REMOVESUBSCRIBESTARTED = \"studentPanel/REMOVESUBSCRIBESTARTED\";\r\nexport const REMOVESUBSCRIBESUCCESS = \"studentPanel/REMOVESUBSCRIBESUCCESS\";\r\nexport const REMOVESUBSCRIBEFAILED = \"studentPanel/REMOVESUBSCRIBEFAILED\";\r\n\r\nexport const GETPROFILEINFOSTARTED = \"studentPanel/GETPROFILEINFOSTARTED\";\r\nexport const GETPROFILEINFOSUCCESS = \"studentPanel/GETPROFILEINFOSUCCESS\";\r\nexport const GETPROFILEINFOFAILED = \"studentPanel/GETPROFILEINFOFAILED\";","import StudentSideMenu from './studentSideMenu';\r\nimport { connect } from 'react-redux';\r\nimport { logOut, changeSection } from \"./actions\"\r\n\r\nconst mapState = (stateRedux) => {\r\n    return {\r\n    }\r\n}\r\n\r\nexport default connect(mapState, { logOut, changeSection })(StudentSideMenu);","import { LOGOUT } from '../../auth/types';\r\nimport { CHANGESECTION } from '../types';\r\n\r\nexport function logOut() {\r\n    return (dispatch) => {\r\n        localStorage.removeItem(\"authToken\");\r\n        dispatch({ type: LOGOUT });\r\n    }\r\n}\r\n\r\nexport function changeSection(sectionName) {\r\n    return (dispatch) => {\r\n        dispatch({ type: CHANGESECTION, title: sectionName });\r\n    }\r\n}","import React from 'react';\r\nimport { Layout, Card, Col, Row, Button, Modal, Form, Input } from 'antd';\r\nimport { FormOutlined } from '@ant-design/icons';\r\nimport { DatePicker, Space } from 'antd';\r\nimport moment from 'moment';\r\n\r\nconst { Content } = Layout\r\nconst { Meta } = Card;\r\n\r\nclass Courses extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            courses: this.props.reduxCourses,\r\n            isModal: false,\r\n            courseForEnroll: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getCourses();\r\n    }\r\n\r\n    static getDerivedStateFromProps = (nextProps, prevState) => {\r\n        return {\r\n            courses: nextProps.reduxCourses\r\n        }\r\n    }\r\n\r\n    enrollInACourse(courseData) {\r\n        this.setState({\r\n            isModal: true,\r\n            courseForEnroll: courseData\r\n        })\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            isModal: false,\r\n            courseForEnroll: {}\r\n        })\r\n    };\r\n\r\n    onFinish = (courseData) => {\r\n        const newCourse = {\r\n            course: this.state.courseForEnroll,\r\n            startDate: moment(courseData.startDate._d).format('YYYY-MM-DD')\r\n        }\r\n        this.props.enrollInACourse(newCourse);\r\n        this.handleCancel();\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    disabledDate = (current) => {\r\n        const now = moment();\r\n        return (\r\n            current &&\r\n            (current < now.subtract(1, \"day\") || current > now.add(3, \"years\"))\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const layout = {\r\n            labelCol: {\r\n                span: 8,\r\n            },\r\n            wrapperCol: {\r\n                span: 16,\r\n            },\r\n        };\r\n\r\n        const tailLayout = {\r\n            wrapperCol: {\r\n                offset: 8,\r\n                span: 16,\r\n            },\r\n        };\r\n\r\n        const dateFormat = 'YYYY-MM-DD';\r\n\r\n        return (\r\n\r\n            <Layout className=\"site-layout\">\r\n                <Content\r\n                    className=\"site-layout-background\"\r\n                    style={{\r\n                        padding: 30,\r\n                        minHeight: 280,\r\n                    }}\r\n                >\r\n                    <Row gutter={10}>\r\n                        {this.state.courses.map((course, index) =>\r\n                            <Col span={4}>\r\n                                <Card\r\n                                    hoverable\r\n                                    cover={<img src={course.imageUrl}\r\n                                        alt=\"Image not found\" />}\r\n                                >\r\n                                    <Meta title={course.title} description={course.description} />\r\n                                    <Meta title={moment(course.createDate).format(dateFormat)} />\r\n                                    <Button type=\"primary\"\r\n                                        icon={<FormOutlined />}\r\n                                        style={{ marginTop: '10px', width: '100%' }}\r\n                                        onClick={() => this.enrollInACourse(course)}>\r\n                                        Enroll\r\n                                    </Button>\r\n                                </Card>\r\n                            </Col>\r\n                        )}\r\n                    </Row>\r\n                </Content>\r\n\r\n                <Modal title=\"Enroll in the course\"\r\n                    visible={this.state.isModal}\r\n                    onCancel={this.handleCancel}\r\n                    okButtonProps={{ style: { display: 'none' } }}>\r\n\r\n                    <Form {...layout} name=\"basic\" initialValues={{\r\n                        remember: true,\r\n                    }} onFinish={this.onFinish} onFinishFailed={this.onFinishFailed} >\r\n\r\n                        <Form.Item label=\"Choose start date :\"\r\n                            name=\"startDate\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please choose start date!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <DatePicker format={dateFormat}\r\n                                disabledDate={this.disabledDate}\r\n                                defaultValue={moment()} />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item {...tailLayout}>\r\n                            <Button type=\"primary\"\r\n                                htmlType=\"submit\">\r\n                                Submit</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n\r\n                </Modal>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Courses;","import axios from \"axios\";\r\n\r\nconst URL = \"http://localhost:5000/Courses/\";\r\n\r\nexport default class coursesService {\r\n\r\n    static getCoursesList(model) {\r\n        return axios.post(URL + 'GetCoursesList', model);\r\n    }\r\n\r\n    static getMyCourses(model) {\r\n        return axios.post(URL + 'GetMyCourses', model);\r\n    }\r\n\r\n    static enrollInACourse(model) {\r\n        console.log(model);\r\n        return axios.post(URL + 'EnrollInACourse', model);\r\n    }\r\n\r\n    static removeSubscribe(model) {\r\n        return axios.post(URL + 'RemoveSubscribe', model);\r\n    }\r\n\r\n    static getProfileInfo(model) {\r\n        return axios.post(URL + 'GetProfileInfo', model);\r\n    }\r\n\r\n    static editCourse(model) {\r\n        return axios.post(URL + 'EditCourse', model);\r\n    }\r\n\r\n    static removeCourse(model) {\r\n        return axios.post(URL + 'RemoveCourse', model);\r\n    }\r\n\r\n    static addCourse(model) {\r\n        return axios.post(URL + 'AddCourse', model);\r\n    }\r\n    \r\n    static getStudents(model) {\r\n        return axios.post(URL + 'GetStudents', model);\r\n    }\r\n}","import Courses from './courses';\r\nimport { connect } from 'react-redux';\r\nimport { getCourses, enrollInACourse } from './actions';\r\n\r\nconst mapState = (stateRedux) => {\r\n    return {\r\n        reduxCourses: stateRedux.studentPanelReducer.reduxCourses\r\n    }\r\n}\r\n\r\nexport default connect(mapState, { getCourses, enrollInACourse })(Courses);\r\n","import * as types from '../../types';\r\nimport service from '../../service';\r\n\r\nexport function getCourses() {\r\n    return (dispatch) => {\r\n\r\n        dispatch({ type: types.GETCOURSESSTARTED });\r\n\r\n        var userToken = localStorage.getItem(\"authToken\");\r\n        var requestData = {\r\n            JwtToken: userToken\r\n        }\r\n\r\n        service.getCoursesList(requestData)\r\n            .then((response) => {\r\n                dispatch({ type: types.GETCOURSESSUCCESS, courses: response.data });\r\n            },\r\n                err => {\r\n                    console.log(\"Error: \", err.response);\r\n                    dispatch({ type: types.GETCOURSESFAILED });\r\n                })\r\n            .catch(err => {\r\n                console.log(\"Global server error\", err);\r\n            });\r\n    }\r\n}\r\n\r\nexport function enrollInACourse(courseData) {\r\n    return (dispatch) => {\r\n        dispatch({ type: types.ENROLLINACOURSESTARTED });\r\n\r\n        var userToken = localStorage.getItem(\"authToken\");\r\n        var requestModel = {\r\n            JwtToken: userToken,\r\n            StartDate: courseData.startDate,\r\n            Course: courseData.course\r\n        }\r\n\r\n        service.enrollInACourse(requestModel)\r\n            .then((response) => {\r\n                dispatch({ type: types.ENROLLINACOURSESSUCCESS, course: courseData.course });\r\n            },\r\n                err => {\r\n                    console.log(\"Error: \", err.response);\r\n                    dispatch({ type: types.ENROLLINACOURSEFAILED });\r\n                })\r\n            .catch(err => {\r\n                console.log(\"Global server error\", err);\r\n            });\r\n    }\r\n}","import React from 'react';\r\nimport { Layout, Card, Col, Row, Button } from 'antd';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\n\r\nimport moment from 'moment';\r\nconst { Content } = Layout\r\nconst { Meta } = Card;\r\n\r\nclass MyCourses extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            courses: this.props.reduxMyCourses,\r\n            isMyCoursesLoadedFromBase: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.isMyCoursesLoadedFromBase == false) {\r\n            this.props.getMyCourses();\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps = (nextProps, prevState) => {\r\n        return {\r\n            courses: nextProps.reduxMyCourses,\r\n            isMyCoursesLoadedFromBase: nextProps.isMyCoursesLoadedFromBase\r\n        }\r\n    }\r\n\r\n    removeMyCourse(model) {\r\n        this.props.removeSubscribe(model);\r\n    }\r\n\r\n    render() {\r\n        const showSectionContent = () => {\r\n            if (this.state.courses.length != 0) {\r\n                return <Row gutter={10}>\r\n                    {this.state.courses.map((course, index) =>\r\n                        <Col span={4}>\r\n                            <Card\r\n                                hoverable\r\n                                cover={<img src={course.imageUrl}\r\n                                    alt=\"Image not found\" />}\r\n                            >\r\n                                <Meta title={course.title} description={course.description} />\r\n                                <Meta date={moment(course.createDate).format(\"YYYY-MM-DD\")} />\r\n                                <Button type=\"primary\"\r\n                                    icon={<CloseOutlined />}\r\n                                    style={{marginTop: '15px', width: '100%'}}\r\n                                    danger\r\n                                    onClick={() => this.removeMyCourse(course)}>\r\n                                    Remove\r\n                                </Button>\r\n                            </Card>\r\n                        </Col>\r\n                    )}\r\n                </Row>\r\n            }\r\n            else {\r\n                return <h2>No courses</h2>\r\n            }\r\n        }\r\n        return (\r\n\r\n            <Layout className=\"site-layout\">\r\n                <Content\r\n                    className=\"site-layout-background\"\r\n                    style={{\r\n                        padding: 30,\r\n                        minHeight: 280,\r\n                    }}\r\n                >\r\n                    {showSectionContent()}\r\n                </Content>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyCourses;","import MyCourses from './myCourses';\r\nimport { connect } from 'react-redux';\r\nimport { getMyCourses, removeSubscribe } from './actions';\r\n\r\nconst mapState = (stateRedux) => {\r\n    return {\r\n        reduxMyCourses: stateRedux.studentPanelReducer.reduxMyCourses,\r\n        isMyCoursesLoadedFromBase: stateRedux.studentPanelReducer.isMyCoursesLoadedFromBase\r\n    }\r\n}\r\n\r\nexport default connect(mapState, { getMyCourses, removeSubscribe })(MyCourses)","import * as types from '../../types';\r\nimport course from '../../service';\r\n\r\nexport function getMyCourses() {\r\n    return (dispatch) => {\r\n\r\n        dispatch({ type: types.GETMYCOURSESSTARTED });\r\n\r\n        var userToken = localStorage.getItem(\"authToken\");\r\n        var requestData = {\r\n            JwtToken: userToken\r\n        }\r\n\r\n        course.getMyCourses(requestData)\r\n            .then((response) => {\r\n                dispatch({ type: types.GETMYCOURSESSUCCESS, courses: response.data });\r\n            },\r\n                err => {\r\n                    console.log(\"Error: \", err.response);\r\n                    dispatch({ type: types.GETMYCOURSESFAILED });\r\n                })\r\n            .catch(err => {\r\n                console.log(\"Global server error\", err);\r\n            });\r\n    }\r\n}\r\n\r\nexport function removeSubscribe(courseData) {\r\n    return (dispatch) => {\r\n\r\n        dispatch({ type: types.REMOVESUBSCRIBESTARTED });\r\n\r\n        var userToken = localStorage.getItem(\"authToken\");\r\n        var requestData = {\r\n            JwtToken: userToken,\r\n            Course: courseData\r\n        }\r\n\r\n        courseData.removeSubscribe(requestData)\r\n            .then((response) => {\r\n                dispatch({ type: types.REMOVESUBSCRIBESUCCESS, course: courseData });\r\n            },\r\n                err => {\r\n                    console.log(\"Error: \", err.response);\r\n                    dispatch({ type: types.REMOVESUBSCRIBEFAILED });\r\n                })\r\n            .catch(err => {\r\n                console.log(\"Global server error\", err);\r\n            });\r\n    }\r\n}","import React from 'react';\r\nimport { Layout, Card, Image } from 'antd';\r\n// import './styles.css'\r\n\r\nconst { Content } = Layout;\r\nconst { Meta } = Card;\r\n\r\nclass Profile extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            profile: this.props.reduxProfile,\r\n            isProfileLoadedFromBase: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.isProfileLoadedFromBase == false) {\r\n            this.props.getProfileInfo();\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps = (nextProps, prevState) => {\r\n        return {\r\n            profile: nextProps.reduxProfileInfo,\r\n            isProfileLoadedFromBase: nextProps.isProfileLoadedFromBase\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <Layout className=\"site-layout\">\r\n                <Content\r\n                    className=\"site-layout-background\"\r\n                    style={{\r\n                        padding: 30,\r\n                    }}\r\n                >\r\n                    \r\n                    <Card hoverable>\r\n                        <table style={{width: '100vh'}}>\r\n                            <tbody style={{width: '100vh'}}>\r\n                                <tr>\r\n                                    <td colspan={3}>\r\n                                        <h1 style={{fontSize: 25}}>{this.state.profile.surname + \" \" + this.state.profile.name} </h1>\r\n                                    </td>\r\n                                    <td rowspan={3} className=\"img\">\r\n                                        <Image\r\n                                            height={250}\r\n                                            src=\"https://i.pinimg.com/564x/4f/dc/be/4fdcbed67e52d1b1f392b6a88f4602c5.jpg\"\r\n                                            disabled\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <h6 style={{fontSize: 15}}>Age</h6>\r\n                                    </td>\r\n                                    <td>\r\n                                        <h6 style={{fontSize: 15}}>{this.state.profile.age}</h6>\r\n                                    </td>\r\n                                    \r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <h6 style={{fontSize: 15}}>Email</h6>\r\n                                    </td>\r\n                                    <td>\r\n                                        <h6 style={{fontSize: 15}}>{this.state.profile.email}</h6>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n\r\n                    </Card>\r\n                </Content>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profile;","import Profile from './profile';\r\nimport { connect } from 'react-redux';\r\nimport { getProfileInfo } from './actions';\r\n\r\nconst mapState = (stateRedux) => {\r\n    return {\r\n        reduxProfileInfo: stateRedux.studentPanelReducer.reduxProfileInfo,\r\n        isProfileLoadedFromBase: stateRedux.studentPanelReducer.isProfileLoadedFromBase\r\n    }\r\n}\r\n\r\nexport default connect(mapState, { getProfileInfo })(Profile)","import * as types from '../../types';\r\nimport service from '../../service';\r\n\r\nexport function getProfileInfo() {\r\n    return (dispatch) => {\r\n\r\n        dispatch({ type: types.GETPROFILEINFOSTARTED });\r\n\r\n        var userToken = localStorage.getItem(\"authToken\");\r\n        var requestData = {\r\n            JwtToken: userToken\r\n        }\r\n\r\n        service.getProfileInfo(requestData)\r\n            .then((response) => {\r\n                dispatch({ type: types.GETPROFILEINFOSUCCESS, profileInfo: response.data });\r\n            },\r\n                err => {\r\n                    console.log(\"Error: \", err.response);\r\n                    dispatch({ type: types.GETPROFILEINFOFAILED });\r\n                })\r\n            .catch(err => {\r\n                console.log(\"Global server error\", err);\r\n            });\r\n    }\r\n}","import React from 'react';\r\nimport { Layout } from 'antd';\r\nimport StudentSideMenu from './sideMenu/index';\r\nimport './styles.css'\r\nimport Courses from './components/courses/index';\r\nimport MyCourses from './components/myCourses/index';\r\nimport Profile from './components/profile/index';\r\nimport * as types from './sideMenu/sectionNames'\r\n\r\nconst { Sider } = Layout\r\n\r\nclass StudentPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: this.props.reduxSectionName\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.title = this.state.title;\r\n  }\r\n\r\n  static getDerivedStateFromProps = (nextProps, prevState) => {\r\n    if (document.title != nextProps.reduxSectionName) {\r\n      document.title = nextProps.reduxSectionName;\r\n    }\r\n    return {\r\n      title: nextProps.reduxSectionName\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const showSectionContent = () => {\r\n      switch (this.state.title) {\r\n        case types.COURSES: {\r\n          return <Courses />\r\n        }\r\n        case types.MYCOURSES: {\r\n          return <MyCourses />\r\n        }\r\n        case types.PROFILE: {\r\n          return <Profile />\r\n        }\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <Layout className=\"pageBlock\">\r\n        <Sider className=\"sideMenu\">\r\n          <StudentSideMenu />\r\n        </Sider>\r\n        {showSectionContent()}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StudentPanel;","import StudentPanel from './studentPanel';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapState = (stateRedux) => {\r\n    return {\r\n        reduxSectionName: stateRedux.studentPanelReducer.reduxSectionName\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapState)(StudentPanel));\r\n","export const COURSES_VER = \"adminPanel/ Courses -> View / Edit / Remove\";\r\nexport const COURSES_Add = \"adminPanel/ Courses -> Add\";\r\nexport const STUDENTS_VER = \"adminPanel/ Students -> View / Edit / Remove\";\r\nexport const STUDENTS_Add = \"adminPanel/ Students -> Add\";","import React, { Fragment } from 'react';\r\nimport { Menu } from 'antd';\r\nimport {\r\n    DatabaseFilled,\r\n    ContactsFilled,\r\n    ExportOutlined\r\n} from '@ant-design/icons';\r\nimport * as types from '../sectionNames'\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass AdminSideMenu extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const logOut = () => {\r\n            this.props.logOut();\r\n        }\r\n\r\n        const changeSection = (name) => {\r\n            this.props.changeSection(name);\r\n        }\r\n\r\n        return (\r\n            <Fragment className=\"block\" >\r\n                <Menu\r\n                    defaultSelectedKeys={['1']}\r\n                    defaultOpenKeys={['sub1']}\r\n                    mode=\"inline\"\r\n                    theme=\"dark\"\r\n                >\r\n                    <SubMenu key=\"sub1\" icon={<DatabaseFilled />} title=\"Courses\">\r\n                        <Menu.Item key=\"1\" onClick={() => changeSection(types.COURSES_VER)}>View / Edit / Remove</Menu.Item>\r\n                        <Menu.Item key=\"2\" onClick={() => changeSection(types.COURSES_Add)}>Add</Menu.Item>\r\n                    </SubMenu>\r\n                    <SubMenu key=\"sub2\" icon={<ContactsFilled />} title=\"Students\">\r\n                        <Menu.Item key=\"3\" onClick={() => changeSection(types.STUDENTS_VER)}>View / Edit / Remove</Menu.Item>\r\n                        <Menu.Item key=\"4\" onClick={() => changeSection(types.STUDENTS_Add)}>Add</Menu.Item>\r\n                    </SubMenu>\r\n                    <Menu.Item key=\"5\" icon={<ExportOutlined />} onClick={() => logOut()}>\r\n                        Log out\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AdminSideMenu;","export const CHANGESECTION = \"adminPanel/CHANGESECTION\";","import AdminSideMenu from './adminSideMenu';\r\nimport { connect } from 'react-redux';\r\nimport { logOut, changeSection } from \"./actions\"\r\n\r\nconst mapState = (stateRedux) => {\r\n    return {\r\n    }\r\n}\r\n\r\nexport default connect(mapState, { logOut, changeSection })(AdminSideMenu);","import { LOGOUT } from \"../../auth/types\"\r\nimport { CHANGESECTION } from \"./types\";\r\n\r\nexport function logOut() {\r\n    return (dispatch) => {\r\n        localStorage.removeItem(\"authToken\");\r\n        dispatch({ type: LOGOUT });\r\n    }\r\n}\r\n\r\nexport function changeSection(sectionName) {\r\n    return (dispatch) => {\r\n        dispatch({ type: CHANGESECTION, title: sectionName });\r\n    }\r\n}","import React from 'react';\r\nimport { Layout, Card, Col, Row, Button, Modal, Form, Input } from 'antd';\r\nimport { FormOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport styles from './styles.css'\r\nimport { DatePicker, Space } from 'antd';\r\nimport moment from 'moment';\r\n\r\nconst { Content } = Layout\r\nconst { Meta } = Card;\r\n\r\nclass Courses extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            courses: this.props.reduxCourses,\r\n            isModal: false,\r\n            courseForEdit: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getCourses();\r\n    }\r\n\r\n    static getDerivedStateFromProps = (nextProps, prevState) => {\r\n        return {\r\n            courses: nextProps.reduxCourses\r\n        }\r\n    }\r\n\r\n    editACourse(course) {\r\n        this.setState({\r\n            isModal: true,\r\n            courseForEdit: course\r\n        });\r\n    }\r\n\r\n    removeACourse(course) {\r\n        this.props.removeCourse(course);\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            isModal: false,\r\n            courseForEdit: {}\r\n        })\r\n    };\r\n\r\n    onFinish = (values) => {\r\n        const newCourse = {\r\n            createDate: this.state.courseForEdit.createDate,\r\n            description: values.description,\r\n            id: this.state.courseForEdit.id,\r\n            imageUrl : values.imageUrl,\r\n            title: values.title\r\n        }\r\n        this.props.editCourse(newCourse, this.state.courseForEdit);\r\n        this.handleCancel();\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    disabledDate = (current) => {\r\n        const now = moment();\r\n        return (\r\n            current &&\r\n            (current < now.subtract(1, \"day\") || current > now.add(3, \"years\"))\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const layout = {\r\n            labelCol: {\r\n                span: 8,\r\n            },\r\n            wrapperCol: {\r\n                span: 16,\r\n            },\r\n        };\r\n\r\n        const tailLayout = {\r\n            wrapperCol: {\r\n                offset: 8,\r\n                span: 16,\r\n            },\r\n        };\r\n\r\n        const dateFormat = 'YYYY-MM-DD';\r\n\r\n        return (\r\n\r\n            <Layout className=\"site-layout\">\r\n                <Content\r\n                    className=\"site-layout-background\"\r\n                    style={{\r\n                        padding: 30,\r\n                        minHeight: 280,\r\n                    }}\r\n                >\r\n                    <Row gutter={10}>\r\n                        {this.state.courses.map((course, index) =>\r\n                            <Col span={4}>\r\n                                <Card\r\n                                    hoverable\r\n                                    cover={<img src={course.imageUrl}\r\n                                        alt=\"Image not found\" />}\r\n                                >\r\n                                    <Meta title={course.title} description={course.description} />\r\n                                    <Meta title={moment(course.createDate).format(dateFormat)} />\r\n                                    <Button type=\"primary\" icon={<FormOutlined />} className=\"edit-form-button\"\r\n                                        onClick={() => this.editACourse(course)}>\r\n                                        Edit\r\n                                    </Button>\r\n                                    <Button type=\"primary\" icon={<CloseOutlined />} className=\"edit-form-button\" danger\r\n                                        onClick={() => this.removeACourse(course)}>\r\n                                        Remove\r\n                                    </Button>\r\n                                </Card>\r\n                            </Col>\r\n                        )}\r\n                    </Row>\r\n                </Content>\r\n\r\n                <Modal title=\"Edit the course\"\r\n                    visible={this.state.isModal}\r\n                    onCancel={this.handleCancel}\r\n                    okButtonProps={{ style: { display: 'none' } }}>\r\n                    <Form {...layout} name=\"basic\" \r\n                    onFinish={this.onFinish} onFinishFailed={this.onFinishFailed} >\r\n\r\n                        <Form.Item label=\"Enter new title :\" name=\"title\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please enter new title!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input placeholder={this.state.courseForEdit.title} />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Enter new description :\" name=\"description\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please enter new description!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input placeholder={this.state.courseForEdit.description} />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Enter new image url :\" name=\"imageUrl\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please enter new image url!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input placeholder={this.state.courseForEdit.imageUrl} />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item {...tailLayout}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Courses;","export const GETCOURSESSTARTED = \"adminPanel/GETCOURSESSTARTED\";\r\nexport const GETCOURSESSUCCESS = \"adminPanel/GETCOURSESSUCCESS\";\r\nexport const GETCOURSESFAILED = \"adminPanel/GETCOURSESFAILED\";\r\n\r\nexport const EDITCOURSESTARTED = \"adminPanel/EDITCOURSESTARTED\";\r\nexport const EDITCOURSESUCCESS = \"adminPanel/EDITCOURSESUCCESS\";\r\nexport const EDITCOURSEFAILED = \"adminPanel/EDITCOURSEFAILED\";\r\n\r\nexport const REMOVECOURSESTARTED = \"adminPanel/REMOVECOURSESTARTED\";\r\nexport const REMOVECOURSESUCCESS = \"adminPanel/REMOVECOURSESUCCESS\";\r\nexport const REMOVECOURSEFAILED = \"adminPanel/REMOVECOURSEFAILED\";\r\n\r\nexport const ADDCOURSESTARTED = \"adminPanel/ADDCOURSESTARTED\";\r\nexport const ADDCOURSESUCCESS = \"adminPanel/ADDCOURSESUCCESS\";\r\nexport const ADDCOURSEFAILED = \"adminPanel/ADDCOURSEFAILED\";\r\n\r\nexport const GETSTUDENTSSTARTED = \"adminPanel/GETSTUDENTSSTARTED\";\r\nexport const GETSTUDENTSSUCCESS = \"adminPanel/GETSTUDENTSSUCCESS\";\r\nexport const GETSTUDENTSFAILED = \"adminPanel/GETSTUDENTSFAILED\";","import Courses from './courses';\r\nimport { connect } from 'react-redux';\r\nimport { getCourses, removeCourse, editCourse } from './actions';\r\n\r\nconst mapState = (stateRedux) => {\r\n    return {\r\n        reduxCourses: stateRedux.adminPanelReducer.reduxCourses\r\n    }\r\n}\r\n\r\nexport default connect(mapState, { getCourses, removeCourse, editCourse})(Courses);\r\n","import * as types from '../../types';\r\nimport coursesService from '../../../studentPanel/service';\r\n\r\nexport function getCourses() {\r\n    return (dispatch) => {\r\n\r\n        dispatch({ type: types.GETCOURSESSTARTED });\r\n\r\n        var token = localStorage.getItem(\"authToken\");\r\n        var model = {\r\n            JwtToken: token\r\n        }\r\n\r\n        coursesService.getCoursesList(model)\r\n            .then((response) => {\r\n                dispatch({ type: types.GETCOURSESSUCCESS, courses: response.data });\r\n            },\r\n                err => {\r\n                    console.log(\"Error: \", err.response);\r\n                    dispatch({ type: types.GETCOURSESFAILED });\r\n                })\r\n            .catch(err => {\r\n                console.log(\"Global server error\", err);\r\n            });\r\n    }\r\n}\r\n\r\nexport function removeCourse(model) {\r\n    return (dispatch) => {\r\n        dispatch({ type: types.REMOVECOURSESTARTED });\r\n\r\n        var token = localStorage.getItem(\"authToken\");\r\n        var requestModel = {\r\n            JwtToken: token,\r\n            Course: model\r\n        }\r\n        \r\n        coursesService.removeCourse(requestModel)\r\n            .then((response) => {\r\n                dispatch({ type: types.REMOVECOURSESUCCESS, course: model });\r\n            },\r\n                err => {\r\n                    console.log(\"Error: \", err.response);\r\n                    dispatch({ type: types.REMOVECOURSEFAILED });\r\n                })\r\n            .catch(err => {\r\n                console.log(\"Global server error\", err);\r\n            });\r\n    }\r\n}\r\n\r\nexport function editCourse(newCourse, course) {\r\n    return (dispatch) => {\r\n        dispatch({ type: types.EDITCOURSESTARTED });\r\n\r\n        var token = localStorage.getItem(\"authToken\");\r\n        var requestModel = {\r\n            JwtToken: token,\r\n            CourseId: newCourse.id,\r\n            CourseTitle: newCourse.title,\r\n            CourseDescription: newCourse.description,\r\n            CourseImageUrl: newCourse.imageUrl\r\n        }\r\n\r\n        coursesService.editCourse(requestModel)\r\n            .then((response) => {\r\n                dispatch({\r\n                    type: types.EDITCOURSESUCCESS,\r\n                    course: course,\r\n                    newCourse: newCourse\r\n                });\r\n            },\r\n                err => {\r\n                    console.log(\"Error: \", err.response);\r\n                    dispatch({ type: types.EDITCOURSEFAILED });\r\n                })\r\n            .catch(err => {\r\n                console.log(\"Global server error\", err);\r\n            });\r\n    }\r\n}","import React from 'react';\r\nimport { Layout, Card, Col, Row, Button, Modal, Form, Input, Alert } from 'antd';\r\nimport './styles.css'\r\nimport $ from 'jquery';\r\n\r\nconst { Content } = Layout\r\nconst { Meta } = Card;\r\n\r\nclass AddCourse extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // showMessage: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    static getDerivedStateFromProps = (nextProps, prevState) => {\r\n        // if (nextProps.showMessage == true) {\r\n        //     $(\".alert\").css(\"display\", \"block\");\r\n        // }\r\n        return {\r\n            // showMessage: nextProps.showMessage\r\n        }\r\n    }\r\n\r\n    onFinish = (values) => {\r\n        this.props.addCourse(values);\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    // changeMessageVisible = () => {\r\n    //     $(\".alert\").css(\"display\", \"none\");\r\n    //     this.setState({showMessage: false})\r\n    //     return(dispatch) => {\r\n    //         dispatch({ type: \"ChangeVisible\" });\r\n    //     }    \r\n    // }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <Layout className=\"site-layout\">\r\n\r\n                {/* <Alert message=\"Complete!\" type=\"success\" \r\n                afterClose={() => this.changeMessageVisible()}\r\n                showIcon closable className=\"alert\" /> */}\r\n\r\n                <Content\r\n                    className=\"site-layout-background\"\r\n                    style={{\r\n                        padding: 30,\r\n                        minHeight: 280,\r\n                    }}\r\n                >\r\n                    <Card hoverable>\r\n                        <Form name=\"basic\"\r\n                            onFinish={this.onFinish} onFinishFailed={this.onFinishFailed} >\r\n\r\n                            <Form.Item label=\"Enter course title :\" name=\"title\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please enter course title!',\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input placeholder=\"Course title\" />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item label=\"Enter course description :\" name=\"description\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please enter course description!',\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input placeholder=\"Course description\" />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item label=\"Enter image url :\" name=\"imageUrl\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please enter image url!',\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input placeholder=\"Course image url\" />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\">Add</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </Content>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddCourse;","import AddCourse from './addCourse';\r\nimport { connect } from 'react-redux';\r\nimport { addCourse } from './actions';\r\n\r\nconst mapState = (stateRedux) => {\r\n    return {\r\n        showMessage: stateRedux.adminPanelReducer.showMessage\r\n    }\r\n}\r\n\r\nexport default connect(mapState, { addCourse })(AddCourse);\r\n","import * as types from '../../types';\r\nimport coursesService from '../../../studentPanel/service';\r\n\r\nexport function addCourse(model) {\r\n    return (dispatch) => {\r\n        dispatch({ type: types.ADDCOURSESTARTED });\r\n\r\n        var token = localStorage.getItem(\"authToken\");\r\n        var requestModel = {\r\n            JwtToken: token,\r\n            Course: model\r\n        }\r\n\r\n        coursesService.addCourse(requestModel)\r\n            .then((response) => {\r\n                dispatch({\r\n                    type: types.ADDCOURSESUCCESS,\r\n                    course: model\r\n                });\r\n            },\r\n                err => {\r\n                    console.log(\"Error: \", err.response);\r\n                    dispatch({ type: types.ADDCOURSEFAILED });\r\n                })\r\n            .catch(err => {\r\n                console.log(\"Global server error\", err);\r\n            });\r\n    }\r\n}","import React from 'react';\r\nimport { Layout, Card, Col, Row, Button, Modal, Form, Input } from 'antd';\r\nimport { FormOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport styles from './styles.css'\r\nimport { DatePicker, Space } from 'antd';\r\nimport moment from 'moment';\r\n\r\nconst { Content } = Layout\r\nconst { Meta } = Card;\r\n\r\nclass Students extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            students: this.props.reduxStudents,\r\n            isModal: false,\r\n            studentForEdit: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getStudents();\r\n    }\r\n\r\n    static getDerivedStateFromProps = (nextProps, prevState) => {\r\n        return {\r\n            students: nextProps.reduxStudents\r\n        }\r\n    }\r\n\r\n    editStudent(course) {\r\n        this.setState({\r\n            isModal: true,\r\n            studentsForEdit: course\r\n        });\r\n    }\r\n\r\n    removeStudent(student) {\r\n        // this.props.removeStudent(course);\r\n        console.log(student);\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            isModal: false,\r\n            studentForEdit: {}\r\n        })\r\n    };\r\n\r\n    onFinish = (values) => {\r\n        const newStudent = {\r\n            name: this.state.studentForEdit.name,\r\n            surname: values.surname,\r\n            id: this.state.studentForEdit.id,\r\n            age: values.age,\r\n            email: values.email,\r\n            password: values.password,\r\n            isAdmin: values.isAdmin\r\n        }\r\n        console.log(newStudent);\r\n        // this.props.editStudent(newStudent, this.state.studentForEdit);\r\n        this.handleCancel();\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    render() {\r\n        const layout = {\r\n            labelCol: {\r\n                span: 8,\r\n            },\r\n            wrapperCol: {\r\n                span: 16,\r\n            },\r\n        };\r\n\r\n        const tailLayout = {\r\n            wrapperCol: {\r\n                offset: 8,\r\n                span: 16,\r\n            },\r\n        };\r\n\r\n        const dateFormat = 'YYYY-MM-DD';\r\n\r\n        return (\r\n\r\n            <Layout className=\"site-layout\">\r\n                <Content\r\n                    className=\"site-layout-background\"\r\n                    style={{\r\n                        padding: 30,\r\n                        minHeight: 280,\r\n                    }}\r\n                >\r\n                    <Row gutter={10}>\r\n                        {this.state.students.map((student, index) =>\r\n                            <Col span={4}>\r\n                                <Card hoverable>\r\n                                    <Meta title={student.name + \" \" + student.surname} />\r\n                                    {/* <Meta title={moment(student.studyDate).format(dateFormat)} /> */}\r\n                                    <Button type=\"primary\" icon={<FormOutlined />} className=\"edit-form-button\"\r\n                                        onClick={() => this.editStudent(student)}>\r\n                                        Edit\r\n                                    </Button>\r\n                                    <Button type=\"primary\" icon={<CloseOutlined />} className=\"edit-form-button\" danger\r\n                                        onClick={() => this.removeStudent(student)}>\r\n                                        Remove\r\n                                    </Button>\r\n                                </Card>\r\n                            </Col>\r\n                        )}\r\n                    </Row>\r\n                </Content>\r\n\r\n                <Modal title=\"Edit the course\"\r\n                    visible={this.state.isModal}\r\n                    onCancel={this.handleCancel}\r\n                    okButtonProps={{ style: { display: 'none' } }}>\r\n                    <Form {...layout} name=\"basic\"\r\n                        onFinish={this.onFinish} onFinishFailed={this.onFinishFailed} >\r\n\r\n                        <Form.Item label=\"Enter new name :\" name=\"name\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please enter new name!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input placeholder={this.state.studentForEdit.title} />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Enter new surname :\" name=\"surname\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please enter new surname!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input placeholder={this.state.studentForEdit.surname} />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item {...tailLayout}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Students;","import Students from './students';\r\nimport { connect } from 'react-redux';\r\nimport { getStudents, removeStudent, editStudent } from './actions';\r\n\r\nconst mapState = (stateRedux) => {\r\n    return {\r\n        reduxStudents: stateRedux.adminPanelReducer.reduxStudents\r\n    }\r\n}\r\n\r\nexport default connect(mapState, {getStudents})(Students);\r\n","import * as types from '../../types';\r\nimport coursesService from '../../../studentPanel/service';\r\n\r\nexport function getStudents() {\r\n    return (dispatch) => {\r\n\r\n        dispatch({ type: types.GETSTUDENTSSTARTED });\r\n\r\n        var token = localStorage.getItem(\"authToken\");\r\n        var model = {\r\n            JwtToken: token\r\n        }\r\n\r\n        coursesService.getStudents(model)\r\n            .then((response) => {\r\n                dispatch({ type: types.GETSTUDENTSSUCCESS, students: response.data });\r\n                console.log(response);\r\n            },\r\n                err => {\r\n                    console.log(\"Error: \", err.response);\r\n                    dispatch({ type: types.GETSTUDENTSSUCCESS });\r\n                })\r\n            .catch(err => {\r\n                console.log(\"Global server error\", err);\r\n            });\r\n    }\r\n}\r\n\r\nexport function removeStudent(model) {\r\n    return (dispatch) => {\r\n        dispatch({ type: types.REMOVECOURSESTARTED });\r\n\r\n        var token = localStorage.getItem(\"authToken\");\r\n        var requestModel = {\r\n            JwtToken: token,\r\n            Course: model\r\n        }\r\n        \r\n        coursesService.removeCourse(requestModel)\r\n            .then((response) => {\r\n                dispatch({ type: types.REMOVECOURSESUCCESS, course: model });\r\n            },\r\n                err => {\r\n                    console.log(\"Error: \", err.response);\r\n                    dispatch({ type: types.REMOVECOURSEFAILED });\r\n                })\r\n            .catch(err => {\r\n                console.log(\"Global server error\", err);\r\n            });\r\n    }\r\n}\r\n\r\nexport function editStudent(newCourse, course) {\r\n    return (dispatch) => {\r\n        dispatch({ type: types.EDITCOURSESTARTED });\r\n\r\n        var token = localStorage.getItem(\"authToken\");\r\n        var requestModel = {\r\n            JwtToken: token,\r\n            CourseId: newCourse.id,\r\n            CourseTitle: newCourse.title,\r\n            CourseDescription: newCourse.description,\r\n            CourseImageUrl: newCourse.imageUrl\r\n        }\r\n\r\n        coursesService.editCourse(requestModel)\r\n            .then((response) => {\r\n                dispatch({\r\n                    type: types.EDITCOURSESUCCESS,\r\n                    course: course,\r\n                    newCourse: newCourse\r\n                });\r\n            },\r\n                err => {\r\n                    console.log(\"Error: \", err.response);\r\n                    dispatch({ type: types.EDITCOURSEFAILED });\r\n                })\r\n            .catch(err => {\r\n                console.log(\"Global server error\", err);\r\n            });\r\n    }\r\n}","import React from 'react';\r\nimport { Layout } from 'antd';\r\nimport SideMenu from './sideMenu/index';\r\nimport './styles.css'\r\nimport * as types from './sectionNames'\r\nimport Courses from './components/courses/index'\r\nimport AddCourse from './components/addCourse/index'\r\nimport Students from './components/students/index'\r\n\r\nconst { Sider } = Layout\r\n\r\nclass AdminPanel extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: \"\",\r\n            sectionName: this.props.reduxSectionName\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = this.state.title;\r\n    }\r\n\r\n    static getDerivedStateFromProps = (nextProps, prevState) => {\r\n        var newTitle;\r\n        switch (nextProps.reduxSectionName) {\r\n            case types.COURSES_VER:\r\n            case types.COURSES_Add:\r\n                {\r\n                    newTitle = \"Courses\";\r\n                    break;\r\n                }\r\n            case types.STUDENTS_VER:\r\n            case types.STUDENTS_Add:\r\n                {\r\n                    newTitle = \"Students\";\r\n                    break;\r\n                }\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (document.title != newTitle) {\r\n            document.title = newTitle;\r\n        }\r\n\r\n        return {\r\n            title: newTitle,\r\n            sectionName: nextProps.reduxSectionName\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const showSectionContent = () => {\r\n            switch (this.state.sectionName) {\r\n                case types.COURSES_VER: {\r\n                    return <Courses />\r\n                }\r\n                case types.COURSES_Add: {\r\n                    return <AddCourse />\r\n                }\r\n                case types.STUDENTS_VER: {\r\n                    return <Students />\r\n                }\r\n                case types.STUDENTS_Add: {\r\n                    return <h1>SA</h1>\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Layout className=\"pageBlock\">\r\n                <Sider className=\"sideMenu\">\r\n                    <SideMenu />\r\n                </Sider>\r\n                {showSectionContent()}\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AdminPanel;","import AdminPanel from './adminPanel';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapState = (stateRedux) => {\r\n    return {\r\n        reduxSectionName: stateRedux.adminPanelReducer.reduxSectionName\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapState)(AdminPanel));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router\"\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = props => {\r\n    const { isAuthUser, role, allowedRoles } = props;\r\n    if (isAuthUser && allowedRoles.includes(role)) return <Route component={() => props.children} />\r\n    if (isAuthUser && !allowedRoles.includes(role)) return <Route component={() => <Redirect to=\"/\" />} />;\r\n    if (!isAuthUser) return <Route component={() => <Redirect to=\"/login\" />} />;\r\n\r\n    return <Route {...props} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthUser: state.authReducer.isAuthUser,\r\n    role: state.authReducer.role\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps)(PrivateRoute));","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport 'antd/dist/antd.css';\nimport Login from './components/auth/login/index';\nimport Registration from './components/auth/registration/index';\nimport StudentPanel from \"./components/studentPanel/index\"\nimport AdminPanel from \"./components/adminPanel/index\"\nimport PrivateRoute from './PrivateRoute';\nimport { roles } from '../src/components/auth/roles'\n\nexport default function App() {\n  return (\n    <Router>\n      <Switch>\n        <PrivateRoute path=\"/studentPanel\" allowedRoles={[roles.STUDENT, roles.ADMIN]}>\n          <StudentPanel />\n        </PrivateRoute>\n        <PrivateRoute path=\"/adminPanel\" allowedRoles={[roles.ADMIN]}>\n          <AdminPanel />\n        </PrivateRoute>\n\n        <Route path=\"/login\" >\n          <Login />\n        </Route>\n        <Route path=\"/registration\" >\n          <Registration />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}","const round = number => Math.round(number * 100) / 100\r\n\r\nconst monitorReducerEnhancer =\r\n  createStore => (reducer, initialState, enhancer) => {\r\n    const monitoredReducer = (state, action) => {\r\n      const start = performance.now()\r\n      const newState = reducer(state, action)\r\n      const end = performance.now()\r\n      const diff = round(end - start)\r\n\r\n      console.log('reducer process time:', diff)\r\n\r\n      return newState\r\n    }\r\n\r\n    return createStore(monitoredReducer, initialState, enhancer)\r\n  }\r\n\r\nexport default monitorReducerEnhancer","const logger = store => next => action => {\r\n  console.group(action.type)\r\n  console.info('dispatching', action)\r\n  let result = next(action)\r\n  console.log('next state', store.getState())\r\n  console.groupEnd()\r\n  return result\r\n}\r\n\r\nexport default logger","import * as loginTypes from './login/types';\r\nimport * as registrationTypes from './registration/types';\r\nimport * as types from './types'\r\nimport { roles } from './roles';\r\n\r\nconst intialState = {\r\n    isAuthUser: false,\r\n    role: roles.GUEST\r\n}\r\n\r\nconst authReducer = (state = intialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case loginTypes.LOGINSTARTED:\r\n            {\r\n                console.log(\"LOGINSTARTED\");\r\n                return state;\r\n            }\r\n        case loginTypes.LOGINSUCCESS:\r\n            {\r\n                console.log(\"LOGINSUCCESS\");\r\n                return {\r\n                    ...state,\r\n                    isAuthUser: true,\r\n                    role: action.role\r\n                };\r\n            }\r\n        case loginTypes.LOGINFAILED: {\r\n            console.log(\"LOGINFAILED\");\r\n            return state;\r\n        }\r\n\r\n        case loginTypes.LOGINVIAFACEBOOKSTARTED:\r\n            {\r\n                console.log(\"LOGINVIAFACEBOOKSTARTED\");\r\n                return state;\r\n            }\r\n        case loginTypes.LOGINVIAFACEBOOKSUCCESS:\r\n            {\r\n                console.log(\"LOGINVIAFACEBOOKSUCCESS\");\r\n                return {\r\n                    ...state,\r\n                    isAuthUser: true,\r\n                    role: action.role\r\n                };\r\n            }\r\n        case loginTypes.LOGINVIAFACEBOOKFAILED:\r\n            {\r\n                console.log(\"LOGINVIAFACEBOOKFAILED\");\r\n                return state;\r\n            }\r\n\r\n        case registrationTypes.REGISTRATIONSTARTED:\r\n            {\r\n                console.log(\"REGISTRATIONSTARTED\");\r\n                return state;\r\n            }\r\n        case registrationTypes.REGISTRATIONSUCCESS:\r\n            {\r\n                console.log(\"REGISTRATIONSUCCESS\");\r\n                return {\r\n                    ...state,\r\n                    isAuthUser: true,\r\n                    role: action.role\r\n                };\r\n            }\r\n        case registrationTypes.REGISTRATIONFAILED:\r\n            {\r\n                console.log(\"REGISTRATIONFAILED\");\r\n                return state;\r\n            }\r\n\r\n        case types.SETCURRENTUSER:\r\n            {\r\n                console.log(\"SETCURRENTUSER\");\r\n                return state;\r\n            }\r\n\r\n        case types.LOGOUT: {\r\n            console.log(\"LOGOUT\");\r\n            return {\r\n                ...state,\r\n                isAuthUser: false,\r\n                role: roles.GUEST\r\n            };\r\n        }\r\n        default:\r\n            {\r\n                return state;\r\n            }\r\n    }\r\n}\r\n\r\nexport default authReducer;","import * as types from './types'\r\nimport * as type from '../auth/types'\r\n\r\nconst intialState = {\r\n    reduxCourses: [],\r\n    reduxSectionName: \"Courses\",\r\n    reduxMyCourses: [],\r\n    isMyCoursesLoadedFromBase: false,\r\n    reduxProfileInfo: {},\r\n    isProfileLoadedFromBase: false\r\n}\r\n\r\nconst studentPanelReducer = (state = intialState, action) => {\r\n    switch (action.type) {\r\n        case types.GETCOURSESSTARTED:\r\n            {\r\n                console.log(\"GETCOURSESSTARTED\");\r\n                return state;\r\n            }\r\n        case types.GETCOURSESSUCCESS:\r\n            {\r\n                console.log(\"GETCOURSESSUCCESS\");\r\n                return {\r\n                    ...state,\r\n                    reduxCourses: action.courses\r\n                };\r\n            }\r\n        case types.GETCOURSESFAILED:\r\n            {\r\n                console.log(\"GETCOURSESFAILED\");\r\n                return state;\r\n            }\r\n        case types.GETMYCOURSESSTARTED:\r\n            {\r\n                console.log(\"GETMYCOURSESSTARTED\");\r\n                return state;\r\n            }\r\n        case types.GETMYCOURSESSUCCESS:\r\n            {\r\n                console.log(\"GETMYCOURSESSUCCESS\");\r\n                return {\r\n                    ...state,\r\n                    reduxMyCourses: action.courses,\r\n                    isMyCoursesLoadedFromBase: true\r\n                };\r\n            }\r\n        case types.GETMYCOURSESFAILED:\r\n            {\r\n                console.log(\"GETMYCOURSESFAILED\");\r\n                return state;\r\n            }\r\n        case types.CHANGESECTION:\r\n            {\r\n                console.log(\"CHANGESECTION\");\r\n                return {\r\n                    ...state,\r\n                    reduxSectionName: action.title\r\n                };\r\n            }\r\n        case types.ENROLLINACOURSESTARTED:\r\n            {\r\n                console.log(\"ENROLLINACOURSESTARTED\");\r\n                return state;\r\n            }\r\n        case types.ENROLLINACOURSESSUCCESS:\r\n            {\r\n                console.log(\"ENROLLINACOURSESSUCCESS\");\r\n                state.reduxMyCourses.push(action.course);\r\n                return { ...state }\r\n            }\r\n        case types.ENROLLINACOURSEFAILED:\r\n            {\r\n                console.log(\"ENROLLINACOURSEFAILED\");\r\n                return state;\r\n            }\r\n        case types.REMOVESUBSCRIBESTARTED:\r\n            {\r\n                console.log(\"REMOVESUBSCRIBESTARTED\");\r\n                return state;\r\n            }\r\n        case types.REMOVESUBSCRIBESUCCESS:\r\n            {\r\n                console.log(\"REMOVESUBSCRIBESUCCESS\");\r\n                var index = state.reduxMyCourses.indexOf(action.course);\r\n                state.reduxMyCourses.splice(index, 1);\r\n                return {\r\n                    ...state,\r\n                    reduxMyCourses: [...state.reduxMyCourses]\r\n                }\r\n            }\r\n        case types.REMOVESUBSCRIBEFAILED:\r\n            {\r\n                console.log(\"REMOVESUBSCRIBEFAILED\");\r\n                return state;\r\n            }\r\n        case types.GETPROFILEINFOSTARTED:\r\n            {\r\n                console.log(\"GETPROFILEINFOSTARTED\");\r\n                return state;\r\n            }\r\n        case types.GETPROFILEINFOSUCCESS:\r\n            {\r\n                console.log(\"GETPROFILEINFOSUCCESS\");\r\n                console.log(action.profileInfo);\r\n                return {\r\n                    ...state,\r\n                    reduxProfileInfo: action.profileInfo,\r\n                    isProfileLoadedFromBase: true\r\n                }\r\n            }\r\n        case types.GETPROFILEINFOFAILED:\r\n            {\r\n                console.log(\"GETPROFILEINFOFAILED\");\r\n                return state;\r\n            }\r\n        case type.LOGOUT: {\r\n            console.log(\"LOGOUT\");\r\n            return {\r\n                ...state,\r\n                reduxCourses: [],\r\n                reduxSectionName: \"Courses\",\r\n                isMyCoursesLoadedFromBase: false,\r\n                reduxProfileInfo: {},\r\n                isProfileLoadedFromBase: false,\r\n                reduxProfileInfo: {},\r\n                reduxMyCourses: []\r\n            };\r\n        }\r\n        default:\r\n            {\r\n                return state;\r\n            }\r\n    }\r\n}\r\n\r\nexport default studentPanelReducer","import { LOGOUT } from '../auth/types'\r\nimport { CHANGESECTION } from './sideMenu/types';\r\nimport { COURSES_VER } from './sectionNames';\r\nimport * as types from './types'\r\n\r\nconst intialState = {\r\n    reduxCourses: [],\r\n    reduxSectionName: COURSES_VER,\r\n    isCoursesLoadedFromBase: false,\r\n    // showMessage: false,\r\n    reduxStudents: []\r\n}\r\n\r\nconst adminPanelReducer = (state = intialState, action) => {\r\n    switch (action.type) {\r\n        case types.EDITCOURSESTARTED: {\r\n            console.log(\"EDITCOURSESTARTED\");\r\n            return { ...state };\r\n        }\r\n        case types.EDITCOURSESUCCESS: {\r\n            console.log(\"EDITCOURSESUCCESS\");\r\n            var index = state.reduxCourses.indexOf(action.course);\r\n            state.reduxCourses[index] = {\r\n                id: action.newCourse.id,\r\n                createDate: action.newCourse.createDate,\r\n                description: action.newCourse.description,\r\n                imageUrl: action.newCourse.imageUrl,\r\n                title: action.newCourse.title\r\n            }\r\n            return {\r\n                ...state,\r\n                reduxCourses: [...state.reduxCourses]\r\n            };\r\n        }\r\n        case types.EDITCOURSEFAILED: {\r\n            console.log(\"EDITCOURSEFAILED\");\r\n            return { ...state };\r\n        }\r\n        case types.GETCOURSESSTARTED: {\r\n            console.log(\"GETCOURSESSTARTED\");\r\n            return { ...state };\r\n        }\r\n        case types.GETCOURSESSUCCESS: {\r\n            console.log(\"GETCOURSESSUCCESS\");\r\n            return { ...state, reduxCourses: action.courses };\r\n        }\r\n        case types.GETCOURSESFAILED: {\r\n            console.log(\"GETCOURSESFAILED\");\r\n            return { ...state };\r\n        }\r\n        case types.REMOVECOURSESTARTED: {\r\n            console.log(\"REMOVECOURSESTARTED\");\r\n            return { ...state };\r\n        }\r\n        case types.REMOVECOURSESUCCESS: {\r\n            console.log(\"REMOVECOURSESUCCESS\");\r\n            var index = state.reduxCourses.indexOf(action.course);\r\n            state.reduxCourses.splice(index, 1);\r\n            return {\r\n                ...state,\r\n                reduxCourses: [...state.reduxCourses]\r\n            }\r\n        }\r\n        case types.REMOVECOURSEFAILED: {\r\n            console.log(\"REMOVECOURSEFAILED\");\r\n            return { ...state };\r\n        }\r\n\r\n        case types.ADDCOURSESTARTED: {\r\n            console.log(\"ADDCOURSESTARTED\");\r\n            return { ...state };\r\n        }\r\n        case types.ADDCOURSESUCCESS: {\r\n            console.log(\"ADDCOURSESUCCESS\");\r\n            state.reduxCourses.push(action.course);\r\n            return { ...state, showMessage: true };\r\n        }\r\n        // case \"ChangeVisible\" : {console.log(\"RT\"); return {showMessage: true}};\r\n        case types.ADDCOURSEFAILED: {\r\n            console.log(\"ADDCOURSEFAILED\");\r\n            return { ...state };\r\n        }\r\n\r\n        case CHANGESECTION: {\r\n            console.log(\"CHANGESECTION\");\r\n            return { ...state, reduxSectionName: action.title };\r\n        }\r\n\r\n        case types.GETSTUDENTSSTARTED: {\r\n            console.log(\"GETSTUDENTSSTARTED\");\r\n            return { ...state };\r\n        }\r\n        case types.GETSTUDENTSSUCCESS: {\r\n            console.log(\"GETSTUDENTSSUCCESS\");\r\n            return { ...state, reduxStudents: action.students };\r\n        }\r\n        case types.GETSTUDENTSFAILED: {\r\n            console.log(\"GETSTUDENTSFAILED\");\r\n            return { ...state };\r\n        }\r\n\r\n        case LOGOUT: {\r\n            console.log(\"LOGOUT\");\r\n            return {\r\n                ...state,\r\n                reduxCourses: [],\r\n                reduxSectionName: COURSES_VER,\r\n                isCoursesLoadedFromBase: false,\r\n                reduxStudents: []\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport default adminPanelReducer","import { combineReducers } from 'redux';\r\n\r\nimport authReducer from './components/auth/reducer';\r\nimport studentPanelReducer from './components/studentPanel/reducer';\r\nimport adminPanelReducer from './components/adminPanel/reducer';\r\n\r\nexport default combineReducers({\r\n    authReducer: authReducer,\r\n    studentPanelReducer: studentPanelReducer,\r\n    adminPanelReducer: adminPanelReducer\r\n});","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport configureStore from './configureStore'\n\nconst store = configureStore()\n\nconst rootElement = document.getElementById('root');\n\nrender(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  rootElement\n);","import { applyMiddleware, createStore } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nimport monitorReducersEnhancer from './enhancers/monitorReducers'\r\nimport loggerMiddleware from './midleware/logger'\r\nimport rootReducer from './rootReducer'\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nexport default function configureStore(preloadedState) {\r\n  const middlewares = [loggerMiddleware, thunkMiddleware]\r\n  const middlewareEnhancer = applyMiddleware(...middlewares)\r\n\r\n  const enhancers = [middlewareEnhancer, monitorReducersEnhancer]\r\n  const composedEnhancers = composeWithDevTools(...enhancers)\r\n\r\n  const store = createStore(rootReducer, preloadedState, composedEnhancers)\r\n\r\n  return store\r\n}"],"sourceRoot":""}